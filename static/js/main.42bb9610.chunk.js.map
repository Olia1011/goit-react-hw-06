{"version":3,"sources":["components/Notification/Notification.module.css","components/Section/Section.js","components/Notification/Notification.js","components/Notification/Error.js","redux/actions.js","components/contactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Bounce.js","components/App.js","redux/reducer.js","redux/store.js","index.js","transition/slide.module.css","components/contactListItem/ContactListItem.module.css","components/contactForm/contactForm.module.css","components/filter/filter.module.css","components/Section/Section.module.css","components/contactList/contactlist.module.css"],"names":["module","exports","Section","title","children","className","styles","section","Notification","name","error","message","Error","addContact","createAction","value","payload","id","uuid","number","deleteContact","filterContact","ContactForm","state","isShow","isOpen","displayName","changeHandler","e","setState","target","submitHandler","preventDefault","props","contacts","filter","contact","length","NotificationMessage","setTimeout","onAddContact","errorMessage","reset","prevState","this","CSSTransition","in","timeout","unmountOnExit","classNames","slideTransition","contactForm","onSubmit","type","onChange","placeholder","btn","onClick","onToggleFilter","Component","mapDispatchToProps","actions","connect","ContactListItem","onDelete","contactLi","contactLiP","items","toLowerCase","includes","TransitionGroup","ul","map","item","key","onFilter","searchInput","inputName","Bounce","styled","div","keyframes","bounce","App","createReducer","action","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistore","persistStore","ReactDOM","render","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.42bb9610.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Notification_error__37ReI\",\"message\":\"Notification_message__2VohP\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n  <section className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport error from './Notification.module.css';\r\n\r\nconst Notification = ({name = ''}) => ( \r\n<div className={error.error}>\r\n\t<h3 className={error.message}>{`${name} already exist!`}\r\n</h3>\r\n</div>\r\n)\r\n\r\nexport default Notification;","import React from 'react';\r\nimport error from './Notification.module.css';\r\n\r\nconst Error = () => ( \r\n<div className={error.error}>\r\n\t<h3 className={error.message}>Add all information!\r\n</h3>\r\n</div>\r\n)\r\n\r\nexport default Error;","import { uuid } from 'uuidv4';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add',value => ({\r\n    payload:{\r\n            id: uuid(),\r\n            name:value.name,\r\n            number:value.number\r\n    }\r\n}))\r\n\r\nconst deleteContact = createAction('contacts/delete')\r\nexport const filterContact = createAction('contacts/filterContact')\r\n\r\nexport default { addContact, deleteContact, filterContact }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport styles from './contactForm.module.css';\r\nimport slideTransition from '../../transition/slide.module.css';\r\nimport Notification from '../Notification/Notification';\r\nimport Error from '../Notification/Error';\r\nimport actions from '../../redux/actions';\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    name: '',\r\n    number: '',\r\n    isShow: false,\r\n    isOpen: false,\r\n    displayName: '',\r\n  };\r\n\r\n\r\n  // getName = () => {\r\n  //   return this.state.name\r\n  // }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ displayName: this.state.name})\r\n    const result = this.props.contacts.filter((contact)=>contact.name === this.state.name)\r\n    if(result.length > 0){\r\n        this.NotificationMessage(); \r\n        setTimeout(() => { this.NotificationMessage()}, 3000) \r\n        return\r\n    }  \r\n    (this.state.name !== '' && this.state.number !== '' )?(       \r\n    this.props.onAddContact({...this.state})\r\n    ): ( ()=> {this.errorMessage();\r\n    setTimeout(() => { this.errorMessage()}, 3000)  })();\r\n\r\n    this.reset()\r\n};\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  errorMessage = () => {\r\n    this.setState(prevState => ({ isShow: !prevState.isShow }));\r\n  };\r\n\r\n  NotificationMessage  = () => {\r\n    this.setState (prevState=>({isOpen:!prevState.isOpen}))\r\n    \r\n}\r\n\r\n  render() {\r\n    const { name, number, isShow, isOpen } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={isOpen}\r\n          timeout={500}\r\n          unmountOnExit\r\n          classNames={slideTransition}>\r\n          <Notification name={this.state.displayName} />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={isShow}\r\n          timeout={500}\r\n          unmountOnExit\r\n          classNames={slideTransition}>\r\n          <Error/>\r\n        </CSSTransition>\r\n        <form className={styles.contactForm} onSubmit={this.submitHandler}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.changeHandler}\r\n              placeholder=\"Enter your name \"\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.changeHandler}\r\n              placeholder=\"Enter your phone\"\r\n            />\r\n          </label>\r\n          <button className={styles.btn} type=\"submit\" onClick={this.props.onToggleFilter}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=> ({\r\n  contacts:state.contacts\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: actions.addContact,\r\n};\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactListItem.module.css';\r\n\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n    return (\r\n      <li className={styles.contactLi}>\r\n        <p className={styles.contactLiP}>\r\n          {name}: {number}\r\n        </p>\r\n        <button type=\"button\" onClick={onDelete} className={styles.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  \r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\n  export default ContactListItem;\r\n","import React from 'react'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\nimport slideTransition from '../../transition/slide.module.css';\r\nimport styles from './contactlist.module.css';\r\n\r\n\r\n\r\nconst ContactList = ({items, onDelete}) => (\r\n    <TransitionGroup  className={styles.ul}>\r\n        {items.map(item =>(\r\n            <CSSTransition key={item.id} timeout={250} classNames={slideTransition}>\r\n                    <ContactListItem {...item}\r\n                    onDelete= {()=>onDelete(item.id)}\r\n                    />\r\n            </CSSTransition>\r\n        ))}\r\n        \r\n    </TransitionGroup>\r\n);\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n     items:state.contacts.filter(contact=>contact.name.toLowerCase().includes(state.filter.toLowerCase()))\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onDelete: actions.deleteContact\r\n}\r\n\r\nContactList.propTypes = {\r\n    items:PropTypes.arrayOf(PropTypes.shape({id:PropTypes.string.isRequired}).isRequired),\r\n    onDelete:PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import fadeTransition from '../../transition/fade.module.css';\r\n\r\nconst Filter = ({ value, onFilter}) => (\r\n  // <CSSTransition\r\n  //          in={contacts.length > 2}\r\n  //           timeout={250}\r\n  //           unmountOnExit\r\n  //           classNames={fadeTransition}>\r\n  <>\r\n    <label className={styles.searchInput}> Find contacts by name </label>\r\n    <input\r\n      className={styles.inputName}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e=>onFilter(e.target.value)}></input>\r\n  </>\r\n  // </CSSTransition> \r\n);\r\n\r\nconst mapStateToProps = state =>({\r\n    value:state.filter\r\n})\r\n\r\n const mapDispatchToProps = {\r\n   onFilter:actions.filterContact\r\n }\r\n\r\n Filter.propTypes = {\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { bounce } from 'react-animations';\r\n\r\nexport const Bounce = styled.div`animation: 3s ${keyframes`${bounce}`}`;","import React, { Component } from 'react';\r\nimport Section from './Section/Section';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport { Bounce } from './logo/Bounce';\r\nimport styles from './App.css';\r\n// import { CSSTransition } from 'react-transition-group'\r\n// import Notification from './Notification/Notification';\r\n// import fadeTransition from '../transition/fade.module.css';\r\n\r\nclass App extends Component {\r\n    // state = {\r\n    //     contacts: [],\r\n    //     isShow: false,\r\n    //     name: '',\r\n    //     filter: '',\r\n    // }\r\n\r\n    render(){\r\n        // const { contacts, isShow, name } = this.state;\r\n        return (\r\n            <>\r\n            <Section>\r\n                <Bounce> <h2 className={styles.title}>Phonebook</h2> </Bounce>\r\n                <ContactForm />\r\n                </Section>\r\n                <Section>\r\n                <h2 className={styles.title}>Contacts</h2>\r\n                {/* <CSSTransition\r\n            in={this.state.contacts.length > 2}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={fadeTransition}> */}\r\n                <Filter/>\r\n                {/* </CSSTransition>  */}\r\n                <ContactList />\r\n                 </Section> \r\n            </>\r\n        )\r\n   }   \r\n}\r\n\r\nexport default App","import { combineReducers } from \"redux\";\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport actions from './actions'\r\n\r\nconst contacts = createReducer ([], {\r\n    [actions.addContact]: (state, action) =>[...state, action.payload],\r\n    [actions.deleteContact]: (state, action) =>state.filter(contact => contact.id !== action.payload)\r\n})\r\n\r\nconst filter = createReducer ('', {\r\n    [actions.filterContact]:(state, action)=>action.payload\r\n})\r\n\r\nexport default combineReducers ({\r\n    contacts,\r\n    filter,\r\n})","import reducer from './reducer';\r\nimport {configureStore, getDefaultMiddleware,} from '@reduxjs/toolkit'\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n  };\r\n\r\n  const persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n  export const store = configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n  })\r\n  export const persistore = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from './components/App';\r\nimport store, {persistore} from './redux/store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistore}>\r\n            <App/>\r\n        </PersistGate>\r\n    </Provider>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1GK3j\",\"enterActive\":\"slide_enterActive__Q0T8x\",\"exit\":\"slide_exit__2cs1r\",\"exitActive\":\"slide_exitActive__37CSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLi\":\"ContactListItem_contactLi__1K-DS\",\"contactLiP\":\"ContactListItem_contactLiP__GosnR\",\"btn\":\"ContactListItem_btn__1yqVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2vjth\",\"btn\":\"contactForm_btn__78ipv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputName\":\"filter_inputName__2vELy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__4gORy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"contactlist_ul__-hCOl\"};"],"sourceRoot":""}