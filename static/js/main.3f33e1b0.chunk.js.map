{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","redux/actions.js","components/contactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Bounce.js","components/App.js","redux/reducer.js","redux/store.js","index.js","transition/slide.module.css","components/contactListItem/ContactListItem.module.css","components/contactForm/contactForm.module.css","components/Notification/Notification.module.css","components/filter/filter.module.css","components/Section/Section.module.css","components/contactList/contactlist.module.css"],"names":["Section","title","children","className","styles","section","Notification","name","error","message","addContact","createAction","value","payload","id","uuid","number","deleteContact","filterContact","ContactForm","state","contacts","isShow","changeHandler","e","setState","target","submitHandler","preventDefault","props","onAddContact","reset","prevState","this","CSSTransition","in","timeout","unmountOnExit","classNames","slideTransition","contactForm","onSubmit","type","onChange","placeholder","btn","Component","mapDispatchToProps","actions","connect","ContactListItem","onDelete","contactLi","contactLiP","onClick","items","filter","contact","toLowerCase","includes","TransitionGroup","ul","map","item","key","onFilter","searchInput","inputName","Bounce","styled","div","keyframes","bounce","App","createReducer","action","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistore","persistStore","ReactDOM","render","loading","persistor","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3f33e1b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n  <section className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport error from './Notification.module.css';\r\n\r\nconst Notification = ({name}) => ( \r\n<div className={error.error}>\r\n\t<h3 className={error.message}>{`${name} Add all information!`}\r\n</h3>\r\n</div>\r\n)\r\n\r\nexport default Notification;","import { uuid } from 'uuidv4';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add',value => ({\r\n    payload:{\r\n            id: uuid(),\r\n            name:value.name,\r\n            number:value.number\r\n    }\r\n}))\r\n\r\nconst deleteContact = createAction('contacts/delete')\r\nexport const filterContact = createAction('contacts/filterContact')\r\n\r\nexport default { addContact, deleteContact, filterContact }","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport {connect} from 'react-redux'\r\nimport styles from './contactForm.module.css'\r\nimport slideTransition from '../../transition/slide.module.css'\r\nimport Notification from '../Notification/Notification';\r\nimport actions from '../../redux/actions';\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        contacts: [],\r\n        name:'',\r\n        number:'',\r\n        isShow:false\r\n    };\r\n\r\n   changeHandler = (e) =>{\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      \r\n    };\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n        // const { name, number } = this.state;\r\n        this.state.name !== '' && this.state.number !== ''\r\n          ? this.props.onAddContact({ ...this.state })\r\n          : this.error();\r\n        this.reset();\r\n      };\r\n    \r\n      reset = () => {\r\n        this.setState({\r\n          name: '',\r\n          number: '',\r\n        });\r\n      };\r\n\r\n    error = ()=> {\r\n         this.setState (prevState=>({isShow:!prevState.isShow}))\r\n    }\r\n\r\n    render() {\r\n        const {name, number, isShow }=this.state\r\n            return (\r\n                <>\r\n                 <CSSTransition\r\n            in={isShow}\r\n            timeout={500}\r\n            unmountOnExit\r\n            classNames={slideTransition}>\r\n            <Notification name={name} />\r\n          </CSSTransition>\r\n                <form className={styles.contactForm} onSubmit = {this.submitHandler}>\r\n                    <label > \r\n                        Name\r\n                        <input  \r\n                        type=\"text\"\r\n                         value = {name} \r\n                         name=\"name\" \r\n                         onChange={this.changeHandler} placeholder=\"Enter your name \"/>\r\n                    </label>\r\n                    <label > \r\n                        Number\r\n                        <input \r\n                        type=\"tel\"\r\n                         value = {number} \r\n                         name=\"number\" \r\n                         onChange={this.changeHandler} \r\n                         placeholder=\"Enter your phone\"/>\r\n                    </label> \r\n                    <button className={styles.btn} type=\"submit\">Add contact</button>\r\n                    </form>\r\n                </>\r\n            )\r\n            } \r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onAddContact:actions.addContact\r\n}\r\n\r\n\r\nContactForm.propTypes = {\r\n    name:PropTypes.string,\r\n    number:PropTypes.number\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm)","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactListItem.module.css';\r\n\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n    return (\r\n      <li className={styles.contactLi}>\r\n        <p className={styles.contactLiP}>\r\n          {name}: {number}\r\n        </p>\r\n        <button type=\"button\" onClick={onDelete} className={styles.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  \r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\n  export default ContactListItem;\r\n","import React from 'react'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\nimport slideTransition from '../../transition/slide.module.css';\r\nimport styles from './contactlist.module.css';\r\n\r\n\r\n\r\nconst ContactList = ({items, onDelete}) => (\r\n    <TransitionGroup  className={styles.ul}>\r\n        {items.map(item =>(\r\n            <CSSTransition key={item.id} timeout={250} classNames={slideTransition}>\r\n                    <ContactListItem {...item}\r\n                    onDelete= {()=>onDelete(item.id)}\r\n                    />\r\n            </CSSTransition>\r\n        ))}\r\n        \r\n    </TransitionGroup>\r\n);\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n     items:state.contacts.filter(contact=>contact.name.toLowerCase().includes(state.filter.toLowerCase()))\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onDelete: actions.deleteContact\r\n}\r\n\r\nContactList.propTypes = {\r\n    items:PropTypes.arrayOf(PropTypes.shape({id:PropTypes.string.isRequired}).isRequired),\r\n    onDelete:PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import fadeTransition from '../../transition/fade.module.css';\r\n\r\nconst Filter = ({ value, onFilter}) => (\r\n  // <CSSTransition\r\n  //          in={contacts.length > 2}\r\n  //           timeout={250}\r\n  //           unmountOnExit\r\n  //           classNames={fadeTransition}>\r\n  <>\r\n    <label className={styles.searchInput}> Find contacts by name </label>\r\n    <input\r\n      className={styles.inputName}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e=>onFilter(e.target.value)}></input>\r\n  </>\r\n  // </CSSTransition> \r\n);\r\n\r\nconst mapStateToProps = state =>({\r\n    value:state.filter\r\n})\r\n\r\n const mapDispatchToProps = {\r\n   onFilter:actions.filterContact\r\n }\r\n\r\n Filter.propTypes = {\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { bounce } from 'react-animations';\r\n\r\nexport const Bounce = styled.div`animation: 3s ${keyframes`${bounce}`}`;","import React, { Component } from 'react';\r\nimport Section from './Section/Section';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport { Bounce } from './logo/Bounce';\r\nimport styles from './App.css';\r\n// import { CSSTransition } from 'react-transition-group'\r\n// import Notification from './Notification/Notification';\r\n// import fadeTransition from '../transition/fade.module.css';\r\n\r\nclass App extends Component {\r\n    // state = {\r\n    //     contacts: [],\r\n    //     isShow: false,\r\n    //     name: '',\r\n    //     filter: '',\r\n    // }\r\n\r\n    render(){\r\n        // const { contacts, isShow, name } = this.state;\r\n        return (\r\n            <>\r\n            <Section>\r\n                <Bounce> <h2 className={styles.title}>Phonebook</h2> </Bounce>\r\n                <ContactForm />\r\n                </Section>\r\n                <Section>\r\n                <h2 className={styles.title}>Contacts</h2>\r\n                {/* <CSSTransition\r\n            in={this.state.contacts.length > 2}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={fadeTransition}> */}\r\n                <Filter/>\r\n                {/* </CSSTransition>  */}\r\n                <ContactList />\r\n                 </Section> \r\n            </>\r\n        )\r\n   }   \r\n}\r\n\r\nexport default App","import { combineReducers } from \"redux\";\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport actions from './actions'\r\n\r\nconst contacts = createReducer ([], {\r\n    [actions.addContact]: (state, action) =>[...state, action.payload],\r\n    [actions.deleteContact]: (state, action) =>state.filter(contact => contact.id !== action.payload)\r\n})\r\n\r\nconst filter = createReducer ('', {\r\n    [actions.filterContact]:(state, action)=>action.payload\r\n})\r\n\r\nexport default combineReducers ({\r\n    contacts,\r\n    filter,\r\n})","import reducer from './reducer';\r\nimport {configureStore, getDefaultMiddleware,} from '@reduxjs/toolkit'\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n  };\r\n\r\n  const persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n  export const store = configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n  })\r\n  export const persistore = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from './components/App';\r\nimport store, {persistore} from './redux/store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistore}>\r\n            <App/>\r\n        </PersistGate>\r\n    </Provider>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1GK3j\",\"enterActive\":\"slide_enterActive__Q0T8x\",\"exit\":\"slide_exit__2cs1r\",\"exitActive\":\"slide_exitActive__37CSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLi\":\"ContactListItem_contactLi__1K-DS\",\"contactLiP\":\"ContactListItem_contactLiP__GosnR\",\"btn\":\"ContactListItem_btn__1yqVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2vjth\",\"btn\":\"contactForm_btn__78ipv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Notification_error__37ReI\",\"message\":\"Notification_message__2VohP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputName\":\"filter_inputName__2vELy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__4gORy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"contactlist_ul__-hCOl\"};"],"sourceRoot":""}